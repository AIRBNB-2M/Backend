management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info
    endpoint:
      health:
        probes:
          enabled: true                 # /actuator/health/{liveness,readiness} 활성화
        show-details: never             # 프로브 용도면 never 권장(민감정보 차단)
spring:
  data:
    redis:
      repositories:
        enabled: true
      host: localhost
      port: 6379
      password:
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
            required: false
  datasource:
    url: jdbc:mysql://localhost:3307/airbnb?zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      auto-commit: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        default_batch_fetch_size: 100
    open-in-view: false

  mvc:
    static-path-pattern: /static/**

  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
          github:
            client-id: ${GH_CLIENT_ID}
            client-secret: ${GH_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            client-name: airbnb
            redirect-uri: ${BASE_URL}/login/oauth2/code/naver
            provider: naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/kakao
            client-name: airbnb
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - openid
              - profile_nickname
              - profile_image
              - account_email
            provider: kakao

        provider:
          kakao:
            issuer-uri: https://kauth.kakao.com
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            jwk-set-uri: https://kauth.kakao.com/.well-known/jwks.json
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

server:
  port: 8081

logging:
  level:
    project.airbnb.clone: debug
    org.hibernate.orm.jdbc.bind: trace
    org.springframework.web.filter.CommonsRequestLoggingFilter: debug

tourapi:
  key: ${TOUR_API_KEY}

portone:
  api-key: ${PORTONE_API_ID}
  api-secret: ${PORTONE_API_SECRET}

jwt:
  secret-key: ${JWT_SECRET_KEY}
  access-token:
    expiration: ${JWT_ACCESS_EXP}
  refresh-token:
    expiration: ${JWT_REFRESH_EXP}

cloudflare:
  r2:
    endpoint: https://${R2_ENDPOINT_URL}.r2.cloudflarestorage.com
    public-url: ${R2_PUBLIC_URL}
    bucket: ${R2_BUCKET_NAME}
    access-key: ${R2_ACCESS_KEY}
    secret-key: ${R2_SECRET_KEY}

rest-day:
  api-key: ${REST_DAY_API_KEY}

app:
  frontend-url: http://localhost:3000
  base-url: http://localhost:8081
  admin:
    email: ${ADMIN_EMAIL}
    password: ${ADMIN_PASSWORD}